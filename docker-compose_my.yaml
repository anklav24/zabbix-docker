version: "3.9"

services:

  adminer:  #Optional for accessing databases
    # How to connect to web UI
    # Server: NAME_OF_YOUR_POSTGRES_SERVER in our case it's postgres-server
    # Username: DB_USERNAME
    # Password: DB_PASSWORD
    # Database: NAME_OF_ZABBIX_DB
    image: adminer
    restart: always
    ports:
      - "8888:8080"
    networks:
      zabbix-docker_zbx_net_backend:
      zabbix-docker_zbx_net_frontend:
    # Прикрутить именованный том чтобы просто хранил настройки?

  grafana-server: #optional more functional and creative UI
    image: grafana/grafana:8.2.0-ubuntu
    volumes:
      - grafana_storage:/var/lib/grafana
#      - /etc/ssl/grafana:/etc/ssl/grafana:ro
#      - /etc/grafana/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - "3000:3000"
    networks:
      zabbix-docker_zbx_net_backend:
      zabbix-docker_zbx_net_frontend:
    restart: always

  portainer:
    image: portainer/portainer-ce:2.9.1-alpine
    volumes:
      - portainer_data:/data  # Прикрутить именованный том чтобы просто хранил настройки?
      - /var/run/docker.sock:/var/run/docker.sock  # Connect to docker API
      # - ~/local-certs:/certs
    ports:
      - "8000:8000"
      - "9000:9000"  # legacy HTTP can be disabled by Force HTTPS only in settings.
      - "9443:9443"  # Self-sing SSL
    #command: --ssl
    #         --sslcert /certs/portainer.crt
    #         --sslkey /certs/portainer.key
    networks:
      zabbix-docker_zbx_net_backend:
      zabbix-docker_zbx_net_frontend:
    restart: always

volumes:
  grafana_storage:
  portainer_data:

networks:
  zabbix-docker_zbx_net_frontend:
    external: true
  zabbix-docker_zbx_net_backend:
    external: true