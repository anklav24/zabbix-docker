version: '3.5'

volumes:
  traefik-certificates:

services:
  server:
    image: zabbix/zabbix-server-pgsql:alpine-latest
    ports:
      - "10051:10051"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro
      - /usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
      - /var/lib/zabbix/export:/var/lib/zabbix/export:rw
      - /var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - /var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - /var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
      - /var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro
      - /var/lib/zabbix/snmptraps:/var/lib/zabbix/snmptraps:ro
    restart: always
    depends_on:
      - postgres-server
    environment:
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
      - POSTGRES_DB=zabbixNew
      - ZBX_HISTORYSTORAGETYPES=log,text #Zabbix configuration variables
      - ZBX_DEBUGLEVEL=1
      - ZBX_HOUSEKEEPINGFREQUENCY=1
      - ZBX_MAXHOUSEKEEPERDELETE=5000
      - ZBX_PROXYCONFIGFREQUENCY=3600
  web-nginx-pgsql:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-latest
    #    ports:
    #  - "80:8080"
        # - "443:8443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/ssl/nginx:/etc/ssl/nginx:ro
      - /usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    sysctls:
      - net.core.somaxconn=65535
    restart: always
    labels:
      - "traefik.enable=true"
      # Zabbix URL (replace with yours)
      - "traefik.http.routers.zabbix.rule=Host(`zabbix24.duckdns.org`)"
      - "traefik.http.routers.zabbix.service=zabbix"
      - "traefik.http.routers.zabbix.entrypoints=websecure"
      - "traefik.http.services.zabbix.loadbalancer.server.port=8080"
      - "traefik.http.routers.zabbix.tls=true"
      - "traefik.http.routers.zabbix.tls.certresolver=letsencrypt"
      - "traefik.http.services.zabbix.loadbalancer.passhostheader=true"
      - "traefik.http.routers.zabbix.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    depends_on:
      - server
      - postgres-server
    environment:
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
      - POSTGRES_DB=zabbixNew
      - ZBX_SERVER_HOST=server
      - ZBX_POSTMAXSIZE=64M
      - PHP_TZ=Europe/Moscow
      - ZBX_MAXEXECUTIONTIME=500

  agent:
    image: zabbix/zabbix-agent:alpine-latest
    ports:
      - "10050:10050"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /proc:/proc
      - /sys:/sys
      - /dev:/dev
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    pid: "host"
    restart: always
    depends_on:
      - server
    environment:
      - ZBX_SERVER_HOST=server
  snmptraps:
    image: zabbix/zabbix-snmptraps:alpine-latest
    ports:
      - "162:1162/udp"
    volumes:
      - /var/lib/zabbix/snmptraps:/var/lib/zabbix/snmptraps:rw
    restart: always
    depends_on:
      - server
    environment:
      - ZBX_SERVER_HOST=server
  postgres-server:
    image: postgres:latest
    restart: always
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_DB=zabbixNew
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  traefik:
    # Image tag (replace with yours)
    image: traefik:2.4
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Email for Let's Encrypt (replace with yours)
      - "--certificatesresolvers.letsencrypt.acme.email=anklav24@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
#      - "traefik.enable=true"
#       Traefik URL (replace with yours)
#      - "traefik.http.routers.dashboard.rule=Host(`traefik.zabbix24.duckdns.org`)"
#      - "traefik.http.routers.dashboard.service=api@internal"
#      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
#      - "traefik.http.routers.dashboard.entrypoints=websecure"
#      - "traefik.http.routers.dashboard.tls=true"
#      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
#      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      # Basic Authentication for Traefik Dashboard
      # Username: traefikadmin (replace with yours)
      # Passwords must be encoded using MD5, SHA1, or BCrypt https://hostingcanada.org/htpasswd-generator/
#      - "traefik.http.middlewares.authtraefik.basicauth.users=admin:$$apr1$$jkb247fe$$bGQJhpgcv612VFaUmpRJu."
#      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
#      - "traefik.http.routers.http-catchall.entrypoints=web"
#      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
#      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
